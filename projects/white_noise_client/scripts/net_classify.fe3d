22 26
META script_type_update
META script_execution_waiting

/// Clear classified messages
EDIT _playerEventMessages = {}
EDIT _skeletonMainMessages = {}
EDIT _skeletonEventMessages = {}
EDIT _gunMainMessages = {}
EDIT _gunEventMessages = {}

/// Classify received messages
LIST stringParts = {}
STR message = ""
STR log = ""
INT index = 0
INT maxIndex = misc:list_get_size("_receivedMessages")
BOOL contains = <false>
LOOP:
    IF index IS maxIndex:
        BREAK
    EDIT message = _receivedMessages[index]
    EDIT stringParts = misc:string_split(message, ":")
    IF stringParts[0] IS "server" AND stringParts[1] IS "start":
        EXEC player_init_main
        EDIT _isGameStarted = <true>
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "join":
        PUSH _playerEventMessages message
    ELIF stringParts[0] IS "player_leave" AND stringParts[1] IS "leave":
        PUSH _playerEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_position":
        PUSH _skeletonMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_rotation":
        PUSH _skeletonMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_legs_speed":
        PUSH _skeletonMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_arms_speed":
        PUSH _skeletonMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_legs_start":
        PUSH _skeletonEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_legs_stop":
        PUSH _skeletonEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_arms_start":
        PUSH _skeletonEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "skeleton_arms_stop":
        PUSH _skeletonEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_position":
        PUSH _gunMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_rotation":
        PUSH _gunMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_visibility":
        PUSH _gunMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gunfire_position":
        PUSH _gunMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gunfire_rotation":
        PUSH _gunMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gunfire_visibility":
        PUSH _gunMainMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_equip":
        PUSH _gunEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_unequip":
        PUSH _gunEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_ads":
        PUSH _gunEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_shoot":
        PUSH _gunEventMessages message
    ELIF stringParts[0] IS "player" AND stringParts[1] IS "gun_reload":
        PUSH _gunEventMessages message
    ELSE:
        EDIT log = misc:string_concat("Received unknown message: ", message)
        fe3d:print(log)
        fe3d:application_stop()
    INCR index 1
