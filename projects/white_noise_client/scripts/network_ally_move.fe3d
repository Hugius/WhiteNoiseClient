62 19
META script_type_update
META script_execution_waiting

/// Commonly used values
LIST stringParts = {}
CONST STR legsID = "skeleton_walk_legs"
STR username = ""
STR payload = ""
STR skeletonID = ""
DEC yaw = fe3d:camera_get_yaw()
INCR yaw _defaultYawOffset
INT index = 0
INT maxIndex = 0
BOOL isJoined = <false>
BOOL isLegsPlaying = <false>

/// Position messages
EDIT index = 0
EDIT maxIndex = misc:list_get_size("_positionMessages")
LOOP:
    IF index IS maxIndex:
        BREAK
    ELSE:
        EDIT stringParts = misc:string_split(_positionMessages[index], ":")
        EDIT username = stringParts[1]
        EDIT payload = stringParts[2]
        EDIT skeletonID = misc:string_concat(username, "_skeleton")
        EDIT isJoined = fe3d:model_is_existing(skeletonID)
        IF isJoined IS <true>:
            CAST payload VEC3
            fe3d:model_set_position(skeletonID, payload.x, payload.y, payload.z)
            CAST payload STR
        INCR index 1

/// Rotation messages
EDIT index = 0
EDIT maxIndex = misc:list_get_size("_rotationMessages")
LOOP:
    IF index IS maxIndex:
        BREAK
    ELSE:
        EDIT stringParts = misc:string_split(_rotationMessages[index], ":")
        EDIT username = stringParts[1]
        EDIT payload = stringParts[2]
        EDIT skeletonID = misc:string_concat(username, "_skeleton")
        EDIT isJoined = fe3d:model_is_existing(skeletonID)
        IF isJoined IS <true>:
            CAST payload VEC3
            fe3d:model_set_rotation(skeletonID, payload.x, payload.y, payload.z)
            CAST payload STR
        INCR index 1

/// Update gun position & rotation
VEC3 gunPos = fe3d:camera_get_position()
VEC3 gunOffset = [0.0 0.0 0.0]
EDIT gunOffset.x = _gunDistance
EDIT gunOffset.y = _gunDataHeight[gunIndex]
EDIT gunOffset.z = _gunDistance
DEC cosYaw = math:cos(yaw)
DEC sinYaw = math:sin(yaw)
MUL gunOffset.x cosYaw
INCR gunOffset.y _gunHeightOffset
MUL gunOffset.z sinYaw
INCR gunPos gunOffset
VEC3 gunRot = fe3d:model_get_rotation(gunID)
EDIT gunRot.y = fe3d:camera_get_yaw()
NEG gunRot.y
INCR gunRot.y 90.0
fe3d:model_set_position(gunID, gunPos.x, gunPos.y, gunPos.z)
fe3d:model_set_rotation(gunID, gunRot.x, gunRot.y, gunRot.z)
