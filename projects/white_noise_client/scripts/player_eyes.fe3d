43 34
META script_type_update
META script_execution_waiting

/// Constants
CONST STR skelID = "player_skeleton"
CONST STR gunID = "player_gun"
CONST STR gunfireID = "player_gunfire"
CONST STR gunfire1ID = "player_gunfire1"
CONST STR gunfire2ID = "player_gunfire2"
CONST DEC yaw = fe3d:camera_get_yaw()

/// Non-constants
VEC3 camPos = fe3d:camera_get_position()

/// Update gun position
VEC3 gunOffset = [0.0 0.0 0.0]
EDIT gunOffset.x = _gunDistance
EDIT gunOffset.y = _gunHeight
EDIT gunOffset.z = _gunDistance
INCR gunOffset.y _gunOffsetY
DEC gunYaw = yaw
INCR gunYaw _gunOffsetX
DEC cosGunYaw = math:cos(gunYaw)
DEC sinGunYaw = math:sin(gunYaw)
VEC3 finalGunOffset = gunOffset
MUL finalGunOffset.x cosGunYaw
MUL finalGunOffset.z sinGunYaw
VEC3 gunPos = camPos
INCR gunPos finalGunOffset
fe3d:model_set_position(gunID, gunPos.x, gunPos.y, gunPos.z)

/// Update gunfire position
VEC3 gunfireOffset = gunOffset
INCR gunfireOffset.y _gunfireHeight
DEC gunfireYaw = yaw
INCR gunfireYaw _gunOffsetX
IF _isGunAds IS <true>:
    INCR gunfireOffset.x _gunfireDistanceAds
    INCR gunfireOffset.z _gunfireDistanceAds
    DECR gunfireYaw _gunfireOffsetAds
ELSE:
    INCR gunfireOffset.x _gunfireDistance
    INCR gunfireOffset.z _gunfireDistance
    DECR gunfireYaw _gunfireOffset
DEC cosGunfireYaw = math:cos(gunfireYaw)
DEC sinGunfireYaw = math:sin(gunfireYaw)
VEC3 finalGunfireOffset = gunfireOffset
MUL finalGunfireOffset.x cosGunfireYaw
MUL finalGunfireOffset.z sinGunfireYaw
VEC3 gunfirePos = camPos
INCR gunfirePos finalGunfireOffset
fe3d:billboard_set_position(gunfire1ID, gunfirePos.x, gunfirePos.y, gunfirePos.z)
fe3d:billboard_set_position(gunfire2ID, gunfirePos.x, gunfirePos.y, gunfirePos.z)
fe3d:light_set_position(gunfireID, gunfirePos.x, gunfirePos.y, gunfirePos.z)

/// Update skeleton position
VEC3 skelPos = camPos
EDIT skelPos.y = _cameraHeightOffset
fe3d:model_set_position(skelID, skelPos.x, skelPos.y, skelPos.z)

/// Update gun rotation
VEC3 gunRot = fe3d:model_get_rotation(gunID)
EDIT gunRot.y = yaw
NEG gunRot.y
INCR gunRot.y 90.0
fe3d:model_set_rotation(gunID, gunRot.x, gunRot.y, gunRot.z)

/// Update gunfire rotation
VEC3 gunfireRot = gunRot
DECR gunfireRot.y 90.0
fe3d:billboard_set_rotation(gunfire1ID, 5.0, gunfireRot.y, 45.0)
fe3d:billboard_set_rotation(gunfire2ID, 5.0, gunfireRot.y, -45.0)

/// Update skeleton rotation
fe3d:model_set_rotation(skelID, 0.0, gunRot.y, 0.0)

/// Revert eye offset
fe3d:camera_follow_z(_skeletonEyeOffset)

/// Save multiplayer world positions
EDIT camPos = fe3d:camera_get_position()
EDIT _multiplayerSkeletonPosition = camPos
EDIT _multiplayerGunPosition = camPos
INCR _multiplayerGunPosition finalGunOffset
EDIT _multiplayerGunfirePosition = camPos
INCR _multiplayerGunfirePosition finalGunfireOffset
