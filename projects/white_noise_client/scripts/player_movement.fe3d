29 72
META script_type_update
META script_execution_waiting

/// Commonly used values
CONST STR gunModelID = misc:string_concat("player_", _equippedGunType)

/// Inputs
BOOL wDown = fe3d:input_is_key_down("KEY_W")
BOOL aDown = fe3d:input_is_key_down("KEY_A")
BOOL sDown = fe3d:input_is_key_down("KEY_S")
BOOL dDown = fe3d:input_is_key_down("KEY_D")
BOOL shiftDown = fe3d:input_is_key_down("KEY_LSHIFT")
BOOL ctrlDown = fe3d:input_is_key_down("KEY_LCTRL")

/// Move eye offset
DEC offset = _skeletonEyeOffset
NEG offset
fe3d:camera_follow_z(offset)

/// Update movement speed
EDIT _isMoving = <false>
EDIT _isSprinting = <false>
MUL _movementSpeedX _movementSlowingFactor
MUL _movementSpeedZ _movementSlowingFactor
DEC minSpeed = _maxMovementSpeed
NEG minSpeed
DEC maxSpeed = _maxMovementSpeed
DEC acceleration = _movementAcceleration
BOOL isSprinting = <false>
IF shiftDown IS <true> AND wDown IS <true> AND _isGunEquipped IS <false>:
    MUL acceleration _sprintFactor
    MUL minSpeed _sprintFactor
    MUL maxSpeed _sprintFactor
    EDIT isSprinting = <true>

/// Update movement inputs
IF wDown IS <true>:
    INCR _movementSpeedZ acceleration
    EDIT _isMoving = <true>
    EDIT _isSprinting = isSprinting
IF sDown IS <true>:
    DECR _movementSpeedZ acceleration
    EDIT _isMoving = <true>
    EDIT _isSprinting = isSprinting
IF dDown IS <true>:
    INCR _movementSpeedX acceleration
    EDIT _isMoving = <true>
    EDIT _isSprinting = isSprinting
IF aDown IS <true>:
    DECR _movementSpeedX acceleration
    EDIT _isMoving = <true>
    EDIT _isSprinting = isSprinting

/// Update movement
EDIT _movementSpeedX = math:clamp(_movementSpeedX, minSpeed, maxSpeed)
EDIT _movementSpeedZ = math:clamp(_movementSpeedZ, minSpeed, maxSpeed)
fe3d:camera_follow_x(_movementSpeedX)
fe3d:camera_follow_z(_movementSpeedZ)
VEC3 camPos = fe3d:camera_get_position()

/// Update gun position
VEC3 gunOffset = [0.0 0.0 0.0]
EDIT gunOffset.x = _gunDistance
EDIT gunOffset.y = _gunDataHeight[_equippedGunIndex]
EDIT gunOffset.z = _gunDistance
DEC yaw = fe3d:camera_get_yaw()
INCR yaw _yawOffset
DEC cosYaw = math:cos(yaw)
DEC sinYaw = math:sin(yaw)
MUL gunOffset.x cosYaw
INCR gunOffset.y _gunHeightOffset
MUL gunOffset.z sinYaw
VEC3 gunPos = camPos
INCR gunPos gunOffset
fe3d:model_set_position(gunModelID, gunPos.x, gunPos.y, gunPos.z)

/// Update gun rotation
VEC3 gunRot = fe3d:model_get_rotation(gunModelID)
EDIT gunRot.y = fe3d:camera_get_yaw()
NEG gunRot.y
INCR gunRot.y 90.0
fe3d:model_set_rotation(gunModelID, gunRot.x, gunRot.y, gunRot.z)

/// Update skeleton position & rotation
fe3d:model_set_position("player_skeleton", camPos.x, _cameraHeightOffset, camPos.z)
fe3d:model_set_rotation("player_skeleton", 0.0, gunRot.y, 0.0)

/// Revert eye offset
fe3d:camera_follow_z(_skeletonEyeOffset)

/// Save multiplayer world positions
EDIT _multiplayerSkeletonPosition = fe3d:camera_get_position()
EDIT _multiplayerGunPosition = fe3d:camera_get_position()
INCR _multiplayerGunPosition gunOffset
