31 38
META script_type_update
META script_execution_waiting

/// Constants
CONST STR skelID = "player_skeleton"
CONST STR gunID = misc:string_concat("player_", _equippedGunType)
CONST STR gunfire1ID = "player_gunfire1"
CONST STR gunfire2ID = "player_gunfire2"
CONST STR gunShootID = misc:string_concat(_equippedGunType, "_shoot")
CONST STR username = fe3d:client_get_username()
CONST BOOL lmbPressed = fe3d:input_is_mouse_pressed("BUTTON_LEFT")
CONST BOOL lmbDown = fe3d:input_is_mouse_down("BUTTON_LEFT")
CONST BOOL isSemi = _gunDataSemi[_equippedGunIndex]
CONST BOOL mustFireSemi = (isSemi IS <true> AND lmbPressed IS <true>)
CONST BOOL mustFireAuto = (isSemi IS <false> AND lmbDown IS <true>)
CONST BOOL isGunShootStarted = fe3d:model_is_animation_started(gunID, gunShootID)

/// Update shooting
IF _gunfireTickCount IS _maxGunfireTickCount:
    fe3d:billboard_set_visible(gunfire1ID, <false>)
    fe3d:billboard_set_visible(gunfire2ID, <false>)
ELSE:
    INCR _gunfireTickCount 1
IF isGunShootStarted IS <false> AND _isGunReloading IS <false>:
    IF _isGunEquipped IS <true>:
        IF mustFireSemi IS <true> OR mustFireAuto IS <true>:
            /// Fire a bullet
            fe3d:model_start_animation(gunID, gunShootID, 0)
            fe3d:sound_play_forced(gunShootID, 0, 0)
            fe3d:billboard_set_visible(gunfire1ID, <true>)
            fe3d:billboard_set_visible(gunfire2ID, <true>)
            EDIT _gunfireTickCount = 0
            /// Send shoot message to server
            STR message = misc:string_concat("forward:player_gun_shoot:", username)
            EDIT message = misc:string_concat(message, ":")
            EDIT message = misc:string_concat(message, _equippedGunType)
            fe3d:client_send_tcp_message(message)
